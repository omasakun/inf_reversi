(function(){'use strict';function ge(id){return document.getElementById(id)}function ce(tagName,classes=[],children=[]){const e=document.createElement(tagName);classes.forEach(_=>addC(e,_));children.forEach(_=>e.appendChild(_));return e}function cLI(innerText,classes,id,onClickFn){const li=ce("li");li.innerText=innerText;classes.forEach(_=>addC(li,_));if(id)li.id=id;if(onClickFn)onClick(li,onClickFn);return li}function addC(elm,cls){elm.classList.add(cls)}
function onClick(elm,fn){elm.addEventListener("click",fn)}
class MyCanvas{constructor(parent,canvas,dpr=undefined){this.parent=parent;this.canvas=canvas;if(canvas.getContext)this.ctx=canvas.getContext("2d");else throw"Canvas\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059";this.width=1;this.height=1;this.dpr=dpr||window.devicePixelRatio||1;(()=>{var i=undefined;window.addEventListener("resize",()=>{if(i!==undefined)clearTimeout(i);i=setTimeout(()=>this.onResize(),100)})})();this.onResize();return this}changeDPR(dpr){this.dpr=dpr||
this.dpr;this.onResize();console.log(`[DPR: ${dpr}/${window.devicePixelRatio||1}`)}onResize(){let canvas=this.ctx.canvas;const maxWidth=this.parent.clientWidth;const maxHeight=this.parent.clientHeight;const width=maxWidth;const height=maxHeight;this.width=this.dpr*width;this.height=this.dpr*height;canvas.width=this.width;canvas.height=this.height;canvas.style.width=width+"px";canvas.style.height=height+"px";this.ctx.lineWidth=this.dpr}line(x1,y1,x2,y2){const scaleX=1,scaleY=1;this.ctx.moveTo(x1*scaleX,
y1*scaleY);this.ctx.lineTo(x2*scaleX,y2*scaleY)}rect(x,y,w,h){const scaleX=1,scaleY=1;this.ctx.rect(x*scaleX,y*scaleY,w*scaleX,h*scaleY)}round(x,y,r){const scaleX=1,scaleY=1;this.ctx.arc(x*scaleX,y*scaleY,r*Math.min(scaleX,scaleY),-.5*Math.PI,2*Math.PI)}longRound(x,y,h,r){const scaleX=1,scaleY=1;this.ctx.arc(x*scaleX,y*scaleY,r*Math.min(scaleX,scaleY),-Math.PI,0);this.ctx.arc(x*scaleX,(y+h)*scaleY,r*Math.min(scaleX,scaleY),0,-Math.PI);this.ctx.lineTo(x*scaleX-r*Math.min(scaleX,scaleY),y*scaleY)}beginPath(){this.ctx.beginPath()}fillAll(style=
undefined){if(style!==undefined)this.ctx.fillStyle=style;this.ctx.fillRect(0,0,this.width,this.height)}fill(style=undefined){if(style!==undefined)this.ctx.fillStyle=style;this.ctx.fill()}stroke(style=undefined){if(style!==undefined)this.ctx.strokeStyle=style;this.ctx.stroke()}clearAll(){this.ctx.clearRect(0,0,this.width,this.height)}}const pref={defaultTurnCount:64};
class UI_Info{constructor(){this.container=ge("info");this.playBtn=ge("i-play");this.onlineBtn=ge("i-start_online");this.joinBtn=ge("i-join_online");this.onPlayClicked=()=>{};this.onOnlineClicked=()=>{};this.onJoinClicked=()=>{};onClick(this.playBtn,()=>this.onPlayClicked());onClick(this.onlineBtn,()=>this.onOnlineClicked());onClick(this.joinBtn,()=>this.onJoinClicked())}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}}
class UI_Config{constructor(){this.container=ge("config");this.sizeInput=ge("c-size_in");this.sizeView=ge("c-size_out");this.startBtn=ge("c-start");this.turnCount=pref.defaultTurnCount;this.onStartClicked=turnCount=>{};onClick(this.startBtn,()=>this.onStartClicked(this.turnCount));this.sizeInput.addEventListener("input",()=>this.onUpdateSizeInput());this.sizeInput.value=this.turnCount+"";this.updateSizeView()}updateSizeView(){this.sizeView.textContent=`The game will finish in ${this.turnCount} turns.`}onUpdateSizeInput(){let value=
parseInt(this.sizeInput.value);if(value<=0||isNaN(value))value=pref.defaultTurnCount;if(value%2==1)value++;this.turnCount=value;this.updateSizeView()}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}}
class UI_Menu{constructor(){this.container=ge("container");this.info=new UI_Info;this.config=new UI_Config;this.isOnline="?";this.onPlayClicked=(turnCount,isOnline)=>{};this.onJoinClicked=()=>{};this.info.onJoinClicked=()=>this.onJoinClicked();this.info.onOnlineClicked=()=>{this.isOnline="yes";this.info.hide();this.config.show()};this.info.onPlayClicked=()=>{this.isOnline="no";this.info.hide();this.config.show()};this.config.onStartClicked=turnCount=>{if(this.isOnline==="?")throw"BUG";this.onPlayClicked(turnCount,
this.isOnline==="yes")}}show(){this.container.classList.remove("hide");this.isOnline="?";this.info.show();this.config.hide()}hide(){this.container.classList.add("hide")}}
class UI_Game{constructor(){this.container=ge("game");this.zoomInBtn=ge("g-zoom_in");this.zoomOutBtn=ge("g-zoom_out");this.putBtn=ge("g-put");this.log=ge("g-log");this.shortMsg=ge("g-short_message");this.message=ge("g-message");this.canvasContainer=ge("g-canvas_parent");this.canvasElem=ge("g-canvas");this.canvas=new MyCanvas(this.canvasContainer,this.canvasElem);this.onZoomInClicked=()=>{};this.onZoomOutClicked=()=>{};this.onPutClicked=()=>{};onClick(this.zoomInBtn,()=>this.onZoomInClicked());onClick(this.zoomOutBtn,
()=>this.onZoomOutClicked());onClick(this.putBtn,()=>this.onPutClicked())}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}clearLog(){this.log.innerHTML=""}addLog(msg){this.log.appendChild(cLI(msg,[]))}setShortMsg(msg){this.shortMsg.textContent=msg}setMsg(msg){this.message.textContent=msg}}
class UI{constructor(){this.menu=new UI_Menu;this.game=new UI_Game;this.onPlayClicked=(turnCount,isOnline)=>{};this.onJoinClicked=()=>{};this.onZoomInClicked=()=>{};this.onZoomOutClicked=()=>{};this.onPutClicked=()=>{};this.menu.onPlayClicked=(turnCount,isOnline)=>this.onPlayClicked(turnCount,isOnline);this.menu.onJoinClicked=()=>this.onJoinClicked();this.game.onZoomInClicked=()=>this.onZoomInClicked();this.game.onZoomOutClicked=()=>this.onZoomOutClicked();this.game.onPutClicked=()=>this.onPutClicked()}showMenu(){this.menu.show();
this.game.hide()}showGame(){this.menu.hide();this.game.show()}clearLog(){this.game.clearLog()}addLog(msg){this.game.addLog(msg)}setShortMsg(msg){this.game.setShortMsg(msg)}setMsg(msg){this.game.setMsg(msg)}getCanvas(){return this.game.canvas}}function isChrome(){return navigator.userAgent.toLowerCase().indexOf("chrome")>-1}function onLoad(fn){window.addEventListener("load",fn)}const chunkSize=16;const minSwipeMove=5;var Cell;
(function(Cell){Cell[Cell["nothing"]=0]="nothing";Cell[Cell["black"]=1]="black";Cell[Cell["white"]=2]="white"})(Cell||(Cell={}));class CellChunk{constructor(xPos,yPos){this.xPos=xPos;this.yPos=yPos;this.cells=(new Array(chunkSize)).fill(0).map(()=>(new Array(chunkSize)).fill(0).map(()=>0))}some(fn){for(let i=0;i<chunkSize;i++)for(let j=0;j<chunkSize;j++)if(fn(i,j))return true;return false}sum(fn){let sum=0;for(let i=0;i<chunkSize;i++)for(let j=0;j<chunkSize;j++)sum+=fn(i,j);return sum}}
class Board{constructor(){this.chunks=new Map}getCell(x,y){const posX=quantize(x,chunkSize);const posY=quantize(y,chunkSize);let tmp=this.chunks.get(posX.quantized);if(!tmp)return 0;let chunk=tmp.get(posY.quantized);if(!chunk)return 0;return chunk.cells[posX.mod][posY.mod]}setCell(x,y,cell){const posX=quantize(x,chunkSize);const posY=quantize(y,chunkSize);let tmp=this.chunks.get(posX.quantized);if(!tmp)this.chunks.set(posX.quantized,tmp=new Map);let chunk=tmp.get(posY.quantized);if(!chunk)tmp.set(posY.quantized,
chunk=new CellChunk(posX.quantized,posY.quantized));chunk.cells[posX.mod][posY.mod]=cell}some(fn){for(const c of this.chunks.values())for(const chunk of c.values()){const chunk_xPos=chunk.xPos;const chunk_yPos=chunk.yPos;if(chunk.some((x,y)=>fn(x+chunk_xPos,y+chunk_yPos)))return true}return false}sum(fn){let sum=0;for(const c of this.chunks.values())for(const chunk of c.values()){const chunk_xPos=chunk.xPos;const chunk_yPos=chunk.yPos;sum+=chunk.sum((x,y)=>fn(x+chunk_xPos,y+chunk_yPos))}return sum}reset(){this.chunks=
new Map}}const di8=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,1]];
class ReversiBoard extends Board{constructor(initialize=true){super();this.onAfterPut=(x,y,piece)=>{};if(initialize)this.reset()}reset(){super.reset();this.setCell(0,0,2);this.setCell(-1,-1,2);this.setCell(-1,0,1);this.setCell(0,-1,1)}canPut(x,y,piece){if(this.getCell(x,y)!==0)return false;const opponent=opponentPiece(piece);return di8.some(di=>this.canReverseDi(x,y,piece,di))}canPutSomewhere(piece){return this.some((x,y)=>this.canPut(x,y,piece))}countPiece(piece){return this.sum((x,y)=>this.getCell(x,
y)===piece?1:0)}put(x,y,piece){if(!this.canPut(x,y,piece))throw"BUG";di8.forEach(di=>{if(this.canReverseDi(x,y,piece,di))this.reverseDi(x,y,piece,di)});this.setCell(x,y,piece);this.onAfterPut(x,y,piece)}isFinished(){return!this.canPutSomewhere(1)&&!this.canPutSomewhere(2)}canReverseDi(x,y,piece,di){const opponent=opponentPiece(piece);let cX=x,cY=y;let cnt=0;while(true){cX+=di[0];cY+=di[1];const cCell=this.getCell(cX,cY);if(cCell===opponent)cnt++;else if(cCell===piece)return cnt>0;else return false}}reverseDi(x,
y,piece,di){const opponent=opponentPiece(piece);let cX=x,cY=y;while(true){cX+=di[0];cY+=di[1];const cCell=this.getCell(cX,cY);if(cCell===opponent)this.setCell(cX,cY,piece);else if(cCell===piece)return;else throw"BUG";}}}
class DrawableReversiBoard extends ReversiBoard{constructor(){super(...arguments);this.canvas=undefined;this.cellSize=1;this.originPixel=[0,0];this.selected=undefined;this.playerPiece=undefined;this.onCellClicked=(x,y)=>{}}bindCanvas(canvas){this.canvas=canvas;const _onCanvasResize=canvas.onResize;canvas.onResize=()=>{_onCanvasResize.apply(canvas);this.render()};let startPos=[0,0];canvas.canvas.addEventListener("pointerdown",e=>{startPos=[e.offsetX,e.offsetY]});canvas.canvas.addEventListener("pointermove",
e=>{if(e.buttons>0){const offset=[(e.offsetX-startPos[0])*canvas.dpr,(e.offsetY-startPos[1])*canvas.dpr];const newOriginPixel=[offset[0]+this.originPixel[0],offset[1]+this.originPixel[1]];this.render(newOriginPixel);e.preventDefault()}});canvas.canvas.addEventListener("pointerup",e=>{const offset=[(e.offsetX-startPos[0])*canvas.dpr,(e.offsetY-startPos[1])*canvas.dpr];if(Math.hypot(...offset)<minSwipeMove){const pos=this.pixel2cell(startPos[0]*canvas.dpr,startPos[1]*canvas.dpr);this.selected=[Math.floor(pos.x),
Math.floor(pos.y)]}else{const newOriginPixel=[offset[0]+this.originPixel[0],offset[1]+this.originPixel[1]];this.originPixel=newOriginPixel}this.render()});this.render()}getCellSize(){return this.cellSize}setCellSize(pixels){this.cellSize=pixels;this.render()}getplayerPiece(){return this.playerPiece}setPlayerPiece(piece){this.playerPiece=piece;this.render()}getSelected(){if(this.selected)return{x:this.selected[0],y:this.selected[1]};return undefined}setSelected(pos){if(pos)this.selected=[pos.x,pos.y];
else this.selected=undefined}put(x,y,piece){super.put(x,y,piece);this.render()}render(originPixel=this.originPixel,playerPiece=this.playerPiece){if(!this.canvas)return;const canvas=this.canvas,width=canvas.width,height=canvas.height,cellSize=this.cellSize;const cell2pixel=(x,y)=>this.cell2pixel(x,y,originPixel);const pixel2cell=(x,y)=>this.pixel2cell(x,y,originPixel);const boardVP={left:Math.floor(pixel2cell(0,0).x),top:Math.floor(pixel2cell(0,0).y),right:Math.ceil(pixel2cell(width,height).x),bottom:Math.ceil(pixel2cell(width,
height).y)};canvas.fillAll("#eee");if(this.selected){const pixel=cell2pixel(this.selected[0],this.selected[1]);canvas.beginPath();this.canvas.rect(pixel.left,pixel.top,cellSize,cellSize);canvas.fill("#cdc")}for(let x=boardVP.left;x<=boardVP.right;x++){const xPixel=cell2pixel(x,0).left;canvas.beginPath();this.canvas.line(xPixel,0,xPixel,height);canvas.stroke(x%chunkSize==0?"#8b8":"#bdb")}for(let y=boardVP.top;y<=boardVP.bottom;y++){const yPixel=cell2pixel(0,y).top;canvas.beginPath();this.canvas.line(0,
yPixel,width,yPixel);canvas.stroke(y%chunkSize==0?"#8b8":"#bdb")}const radius=cellSize/2*.8,suggestRadius=Math.max(1,radius*.2);for(let x=boardVP.left;x<=boardVP.right;x++)for(let y=boardVP.top;y<=boardVP.bottom;y++){const pixel=cell2pixel(x,y);const centerX=pixel.left+cellSize/2,centerY=pixel.top+cellSize/2;const piece=this.getCell(x,y);if(piece===1){canvas.beginPath();this.canvas.round(centerX,centerY,radius);canvas.fill("#555")}else if(piece===2){canvas.beginPath();this.canvas.round(centerX,centerY,
radius);canvas.stroke("#555")}else if(piece===0){if(playerPiece&&this.canPut(x,y,playerPiece)){canvas.beginPath();this.canvas.round(centerX,centerY,suggestRadius);canvas.fill("#555")}}else throw"BUG";}}cell2pixel(x,y,originPixel=this.originPixel){if(!this.canvas)throw"BUG";const canvas=this.canvas,width=canvas.width,height=canvas.height,cellSize=this.cellSize;return{left:originPixel[0]+x*cellSize+width/2,top:originPixel[1]+y*cellSize+height/2}}pixel2cell(x,y,originPixel=this.originPixel){if(!this.canvas)throw"BUG";
const canvas=this.canvas,width=canvas.width,height=canvas.height,cellSize=this.cellSize;return{x:(x-width/2-originPixel[0])/cellSize,y:(y-height/2-originPixel[1])/cellSize}}}function quantize(num,divisor){const quantized=Math.floor(num/divisor)*divisor;const mod=num-quantized;return{quantized,mod}}function opponentPiece(piece){if(piece===1)return 2;if(piece===2)return 1;throw"BUG";}
function showConsoleBanner(){if(isChrome())console.log("\n"+"%c %c Infinite Reversi \n"+"%c %c Made by omasakun on 2019\n"+"%c %c GitHub: https://github.com/omasakun/inf_reversi\n"+"%c %c Enjoy!\n","color: #130f40; background-color: #a799ef; line-height: 2;","color: #ddd6ff; background-color: #524983; line-height: 2;","color: #130f40; background-color: #a799ef; line-height: 1.5;","","color: #130f40; background-color: #a799ef; line-height: 1.5;","","color: #130f40; background-color: #a799ef; line-height: 1.5;",
"font-weight: bold");else console.log("\n"+"\u2503 ### Infinite Reversi ### \n"+"\u2503 \n"+"\u2503 Made by omasakun on 2019\n"+"\u2503 GitHub: https://github.com/omasakun\n"+"\u2503 Enjoy!\n")}showConsoleBanner();
onLoad(()=>{const ui=new UI;let board=new DrawableReversiBoard;console.log(window["ui"]=ui,window["board"]=board);let currentTurn=1;let maxTurnCount=-1;const updateShortMsg=()=>{ui.setShortMsg(`\u25cf x ${board.countPiece(1)} , \u25cb x ${board.countPiece(2)}`)};const updateMsg=()=>{if(isGameover()){const wCount=board.countPiece(2);const bCount=board.countPiece(1);if(wCount===bCount)ui.setMsg("\u30b2\u30fc\u30e0\u7d42\u4e86\u3002\u4e16\u306b\u3082\u73cd\u3057\u3044\u5f15\u304d\u5206\u3051\u3067\u3059\uff01");
ui.setMsg(`\u30b2\u30fc\u30e0\u7d42\u4e86\u3002${bCount>wCount?"\u25cf":"\u25cb"} \u306e\u52dd\u5229\u3067\u3059\uff01`);return}const piece=board.getplayerPiece();if(!piece)return;ui.setMsg(`\u7b2c${currentTurn}\u30bf\u30fc\u30f3\u3002${piece===1?"\u25cf":"\u25cb"} \u306e\u30bf\u30fc\u30f3\u3067\u3059\u3002`)};const isGameover=()=>{return board.isFinished()||currentTurn>maxTurnCount};board.bindCanvas(ui.getCanvas());board.setPlayerPiece(1);board.setCellSize(64);board.reset();board.onAfterPut=(x,y,
piece)=>{ui.addLog(`${piece===1?"\u25cf":"\u25cb"} (${x}, ${y})`);currentTurn++;updateShortMsg()};ui.onZoomInClicked=()=>board.setCellSize(board.getCellSize()*1.2);ui.onZoomOutClicked=()=>board.setCellSize(board.getCellSize()/1.2);ui.onPutClicked=()=>{if(isGameover()){alert("\u30b2\u30fc\u30e0\u306f\u65e2\u306b\u7d42\u308f\u3063\u305f\u306e\u3067\u3059\u3002\u30b3\u30de\u3092\u7f6e\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002");return}const selected=board.getSelected();
const player=board.getplayerPiece();if(player===undefined)throw"BUG";if(!selected){ui.setMsg("\u3069\u306e\u30de\u30b9\u306b\u30b3\u30de\u3092\u7f6e\u304d\u305f\u3044\u3067\u3059\u304b\uff1f \u7f6e\u304d\u305f\u3044\u30de\u30b9\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u304f\u3060\u3055\u3044\u3002");return}if(!board.canPut(selected.x,selected.y,player)){ui.setMsg(`\u9078\u629e\u3057\u305f\u30de\u30b9 (${selected.x}, ${selected.y}) \u306b\u306f\u3042\u306a\u305f\u306e\u30b3\u30de\u306f\u7f6e\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u4ed6\u306e\u30de\u30b9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u9ed2\u3044\u30c9\u30c3\u30c8\u306e\u3064\u3044\u305f\u30de\u30b9\u306a\u3089\u3069\u3053\u3067\u3082\u30b3\u30de\u3092\u7f6e\u3051\u307e\u3059\u3002`);
return}board.put(selected.x,selected.y,player);board.setPlayerPiece(opponentPiece(player));updateMsg()};ui.onPlayClicked=(turnCount,isOnline)=>{if(isOnline){alert("Online mode is not supported yet... Please enjoy offline mode!");location.reload()}else{maxTurnCount=turnCount;ui.clearLog();ui.showGame();ui.getCanvas().onResize();board.render();updateShortMsg();updateMsg()}};ui.onJoinClicked=()=>{alert("Online mode is not supported yet... Please enjoy offline mode!")};ui.showMenu()});})()
