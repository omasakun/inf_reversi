(function(){'use strict';function ge(id){return document.getElementById(id)}function ce(tagName,classes=[],children=[]){const e=document.createElement(tagName);classes.forEach(_=>addC(e,_));children.forEach(_=>e.appendChild(_));return e}function addC(elm,cls){elm.classList.add(cls)}function onClick(elm,fn){elm.addEventListener("click",fn)}
class ResponsiveCanvas{constructor(parent,canvas,dpr=undefined){this.parent=parent;this.canvas=canvas;if(canvas.getContext)this.ctx=canvas.getContext("2d");else throw"Canvas\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059";this.scaleX=1;this.scaleY=1;this.dpr=dpr||window.devicePixelRatio||1;(()=>{var i=undefined;window.addEventListener("resize",()=>{if(i!==undefined)clearTimeout(i);i=setTimeout(()=>this.onResize(),100)})})();this.onResize();return this}changeDPR(dpr){this.dpr=
dpr||this.dpr;this.onResize();console.log(`[DPR: ${dpr}/${window.devicePixelRatio||1}`)}onResize(){let canvas=this.ctx.canvas;const maxWidth=this.parent.clientWidth;const maxHeight=this.parent.clientHeight;const scaleX=maxWidth;const scaleY=maxHeight;this.scaleX=this.dpr*scaleX;this.scaleY=this.dpr*scaleY;canvas.width=this.scaleX;canvas.height=this.scaleY;canvas.style.width=scaleX+"px";canvas.style.height=scaleY+"px";this.ctx.lineWidth=this.dpr}line(x1,y1,x2,y2){this.ctx.moveTo(x1*this.scaleX,y1*
this.scaleY);this.ctx.lineTo(x2*this.scaleX,y2*this.scaleY)}rect(x,y,w,h){this.ctx.rect(x*this.scaleX,y*this.scaleY,w*this.scaleX,h*this.scaleY)}round(x,y,r){this.ctx.arc(x*this.scaleX,y*this.scaleY,r*Math.min(this.scaleX,this.scaleY),-.5*Math.PI,2*Math.PI)}longRound(x,y,h,r){this.ctx.arc(x*this.scaleX,y*this.scaleY,r*Math.min(this.scaleX,this.scaleY),-Math.PI,0);this.ctx.arc(x*this.scaleX,(y+h)*this.scaleY,r*Math.min(this.scaleX,this.scaleY),0,-Math.PI);this.ctx.lineTo(x*this.scaleX-r*Math.min(this.scaleX,
this.scaleY),y*this.scaleY)}beginPath(){this.ctx.beginPath()}fillAll(style=undefined){if(style!==undefined)this.ctx.fillStyle=style;this.ctx.fillRect(0,0,this.scaleX,this.scaleY)}fill(style=undefined){if(style!==undefined)this.ctx.fillStyle=style;this.ctx.fill()}stroke(style=undefined){if(style!==undefined)this.ctx.strokeStyle=style;this.ctx.stroke()}clearAll(){this.ctx.clearRect(0,0,this.scaleX,this.scaleY)}}const pref={defaultTurnCount:64};
class UI_Info{constructor(){this.container=ge("info");this.playBtn=ge("i-play");this.onlineBtn=ge("i-start_online");this.joinBtn=ge("i-join_online");this.onPlayClicked=()=>{};this.onOnlineClicked=()=>{};this.onJoinClicked=()=>{};onClick(this.playBtn,()=>this.onPlayClicked());onClick(this.onlineBtn,()=>this.onOnlineClicked());onClick(this.joinBtn,()=>this.onJoinClicked())}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}}
class UI_Config{constructor(){this.container=ge("config");this.sizeInput=ge("c-size_in");this.sizeView=ge("c-size_out");this.startBtn=ge("c-start");this.turnCount=pref.defaultTurnCount;this.onStartClicked=turnCount=>{};onClick(this.startBtn,()=>this.onStartClicked(this.turnCount));this.sizeInput.addEventListener("input",()=>this.onUpdateSizeInput());this.sizeInput.value=this.turnCount+"";this.updateSizeView()}updateSizeView(){this.sizeView.textContent=`The game will finish in ${this.turnCount} turns.`}onUpdateSizeInput(){let value=
parseInt(this.sizeInput.value);if(value<=0||isNaN(value))value=pref.defaultTurnCount;if(value%2==1)value++;this.turnCount=value;this.updateSizeView()}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}}
class UI_Menu{constructor(){this.container=ge("container");this.info=new UI_Info;this.config=new UI_Config;this.isOnline="?";this.onPlayClicked=(turnCount,isOnline)=>{};this.onJoinClicked=()=>{};this.info.onJoinClicked=()=>this.onJoinClicked();this.info.onOnlineClicked=()=>{this.isOnline="yes";this.info.hide();this.config.show()};this.info.onPlayClicked=()=>{this.isOnline="no";this.info.hide();this.config.show()};this.config.onStartClicked=turnCount=>{if(this.isOnline==="?")throw"BUG";this.onPlayClicked(turnCount,
this.isOnline==="yes")}}show(){this.container.classList.remove("hide");this.isOnline="?";this.info.show();this.config.hide()}hide(){this.container.classList.add("hide")}}
class UI_Game{constructor(){this.container=ge("game");this.zoomInBtn=ge("g-zoom_in");this.zoomOutBtn=ge("g-zoom_out");this.putBtn=ge("g-put");this.log=ge("log");this.shortMsg=ge("g-short_message");this.message=ge("g-message");this.canvasContainer=ge("g-canvas_parent");this.canvasElem=ge("g-canvas");this.canvas=new ResponsiveCanvas(this.canvasContainer,this.canvasElem);this.onZoomInClicked=()=>{};this.onZoomOutClicked=()=>{};this.onPutClicked=()=>{};onClick(this.zoomInBtn,()=>this.onZoomInClicked());
onClick(this.zoomOutBtn,()=>this.onZoomOutClicked());onClick(this.putBtn,()=>this.onPutClicked())}show(){this.container.classList.remove("hide")}hide(){this.container.classList.add("hide")}clearLog(){this.log.innerHTML=""}addLog(elem){this.log.appendChild(ce("li",[],elem))}setShortMsg(msg){this.shortMsg.textContent=msg}setMsg(msg){this.message.textContent=msg}}
class UI{constructor(){this.menu=new UI_Menu;this.game=new UI_Game;this.onPlayClicked=(turnCount,isOnline)=>{};this.onJoinClicked=()=>{};this.menu.onPlayClicked=(turnCount,isOnline)=>this.onPlayClicked(turnCount,isOnline);this.menu.onJoinClicked=()=>this.onJoinClicked()}showMenu(){this.menu.show();this.game.hide()}showGame(){this.menu.hide();this.game.show()}clearLog(){this.game.clearLog()}addLog(elem){this.game.addLog(elem)}setShortMsg(msg){this.game.setShortMsg(msg)}setMsg(msg){this.game.setMsg(msg)}}
function isChrome(){return navigator.userAgent.toLowerCase().indexOf("chrome")>-1}function onLoad(fn){window.addEventListener("load",fn)}const chunkSize=16;const minSwipeMove=5;var Cell;(function(Cell){Cell[Cell["nothing"]=0]="nothing";Cell[Cell["black"]=1]="black";Cell[Cell["white"]=2]="white"})(Cell||(Cell={}));class CellChunk{constructor(xPos,yPos){this.xPos=xPos;this.yPos=yPos;this.cells=(new Array(chunkSize)).fill(0).map(()=>(new Array(chunkSize)).fill(0).map(()=>0))}}
class Board{constructor(){this.chunks=new Map}getCell(x,y){const posX=quantize(x,chunkSize);const posY=quantize(y,chunkSize);let tmp=this.chunks.get(posX.quantized);if(!tmp)return 0;let chunk=tmp.get(posY.quantized);if(!chunk)return 0;return chunk.cells[posX.mod][posY.mod]}setCell(x,y,cell){const posX=quantize(x,chunkSize);const posY=quantize(y,chunkSize);let tmp=this.chunks.get(posX.quantized);if(!tmp)this.chunks.set(posX.quantized,tmp=new Map);let chunk=tmp.get(posY.quantized);if(!chunk)tmp.set(posY.quantized,
chunk=new CellChunk(posX.quantized,posY.quantized));chunk.cells[posX.mod][posY.mod]=cell}reset(){this.chunks=new Map}}const di8=[[-1,-1],[-1,0],[-1,1],[0,-1],[0,1],[1,-1],[1,0],[1,-1]];
class ReversiBoard extends Board{constructor(initialize=true){super();if(initialize)this.reset()}reset(){super.reset();this.setCell(0,0,2);this.setCell(-1,-1,1);this.setCell(-1,0,1);this.setCell(0,0,2)}canPut(x,y,piece){if(this.getCell(x,y)!==0)return false;const opponent=opponentPiece(piece);return di8.some(di=>this.canReverseDi(x,y,piece,di))}put(x,y,piece){if(!this.canPut(x,y,piece))throw"BUG";di8.forEach(di=>{if(this.canReverseDi(x,y,piece,di))this.reverseDi(x,y,piece,di)})}canReverseDi(x,y,piece,
di){const opponent=opponentPiece(piece);let cX=x,cY=y;let cnt=0;while(true){cX+=di[0];cY+=di[1];const cCell=this.getCell(cX,cY);if(cCell===opponent)cnt++;else if(cCell===piece)return cnt>0;else return false}}reverseDi(x,y,piece,di){const opponent=opponentPiece(piece);let cX=x,cY=y;while(true){cX+=di[0];cY+=di[1];const cCell=this.getCell(cX,cY);if(cCell===opponent)this.setCell(cX,cY,piece);else if(cCell===piece)return;else throw"BUG";}}}
class DrawableReversiBoard extends ReversiBoard{constructor(){super(...arguments);this.canvas=undefined;this.zoomFactor=1;this.viewCenter=[0,0];this.selected=undefined;this.onCellClicked=(x,y)=>{}}bindCanvas(canvas){this.canvas=canvas;canvas.onResize=()=>{this.render()};let startPos=[0,0];canvas.canvas.addEventListener("pointerdown",e=>{startPos=[e.clientX,e.clientY]});canvas.canvas.addEventListener("pointermove",e=>{const offset=[e.clientX-startPos[0],e.clientY-startPos[1]];if(Math.hypot(...offset)<
minSwipeMove)return;const newViewCenter=[offset[0]+this.viewCenter[0],offset[1]+this.viewCenter[1]];this.render(newViewCenter)});canvas.canvas.addEventListener("pointerup",e=>{const offset=[e.clientX-startPos[0],e.clientY-startPos[1]];if(Math.hypot(...offset)<minSwipeMove);else{const newViewCenter=[offset[0]+this.viewCenter[0],offset[1]+this.viewCenter[1]]}this.render()});this.render()}getZoom(){return this.zoomFactor}setZoom(factor){this.zoomFactor=factor;this.render()}put(x,y,piece){super.put(x,
y,piece);this.render()}render(viewCenter){if(!this.canvas)return}}function quantize(num,divisor){const quantized=Math.floor(num/divisor)*divisor;const mod=num-quantized;return{quantized,mod}}function opponentPiece(piece){if(piece===1)return 2;if(piece===2)return 1;throw"BUG";}
function showConsoleBanner(){if(isChrome())console.log("\n"+"%c %c Infinite Reversi \n"+"%c %c Made by omasakun on 2019\n"+"%c %c GitHub: https://github.com/omasakun/inf_reversi\n"+"%c %c Enjoy!\n","color: #130f40; background-color: #a799ef; line-height: 2;","color: #ddd6ff; background-color: #524983; line-height: 2;","color: #130f40; background-color: #a799ef; line-height: 1.5;","","color: #130f40; background-color: #a799ef; line-height: 1.5;","","color: #130f40; background-color: #a799ef; line-height: 1.5;",
"font-weight: bold");else console.log("\n"+"\u2503 ### Infinite Reversi ### \n"+"\u2503 \n"+"\u2503 Made by omasakun on 2019\n"+"\u2503 GitHub: https://github.com/omasakun\n"+"\u2503 Enjoy!\n")}showConsoleBanner();onLoad(()=>{const ui=new UI;console.log(ui);ui.showMenu()});let board=new DrawableReversiBoard;})()
